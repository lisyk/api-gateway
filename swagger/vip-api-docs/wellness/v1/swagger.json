{
  "openapi": "3.0.0",
  "info": {
    "title": "Wellness Integration Engine",
    "version": "v1",
    "description": "Wellness Integration Engine Documentation"
  },
  "basePath": "/",
  "components": {
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "plan_get_response_list": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#components/schemas/plan_get_response"
            }
          }
        }
      },
      "plan_get_response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5477684
          },
          "age_group": {
            "type": "integer",
            "example": 1,
            "nullable": true
          },
          "auto_renew": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2019-02-18T18:20:12Z",
            "nullable": true
          },
          "sort_order": {
            "type": "integer",
            "example": 10,
            "nullable": true
          },
          "code": {
            "type": "string",
            "example": "10001",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2019-02-18T18:20:12Z",
            "nullable": true
          },
          "long_description": {
            "type": "string",
            "example": "<b>The Puppy Wellness Plan Includes:</b><div><ul><li>3 Complete Physical Exams</li><li>Core Vaccination Series as Recommended by Your Veterinarian - Includes 5-in-1 (DAP/Parvo), Lepto 4, Bordetella and Rabies</li><li>2 Fecal Tests</li><li>2 Deworming Treatments - Roundworms and Hookworms</li><li>Microchip I.D. and Registration</li></ul><div><br></div></div><div><br></div>",
            "nullable": true
          },
          "paid_in_full_discount": {
            "type": "number",
            "example": 0,
            "nullable": true
          },
          "payment_term": {
            "type": "integer",
            "example": 12,
            "nullable": true
          },
          "full_plan_price": {
            "type": "number",
            "example": 263.4,
            "nullable": true
          },
          "plan_services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/offered_service_get_response"
            },
            "nullable": true
          },
          "recurring_plan_payment_total": {
            "type": "number",
            "example": 21.95,
            "nullable": true
          },
          "short_description": {
            "type": "string",
            "example": "Puppy Wellness Plan",
            "nullable": true
          },
          "species_id": {
            "type": "string",
            "example": "aa49c6a9-a4e8-4a19-bea0-059739291646",
            "nullable": true
          }
        }
      },
      "service_list": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "$ref": "#components/schemas/service"
            }
          }
        }
      },
      "service": {
        "type": "object",
        "properties": {
          "services": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "integer"
                },
                "offeredService": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "shortDescription": {
                      "type": "string"
                    }
                  }
                },
                "plan": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "shortDescription": {
                      "type": "string"
                    }
                  }
                },
                "cost": {
                  "type": "number",
                  "nullable": true
                },
                "dateCreated": {
                  "type": "string"
                },
                "discountPercent": {
                  "type": "number",
                  "nullable": true
                },
                "discountedPrice": {
                  "type": "number"
                },
                "displayOrder": {
                  "type": "integer"
                },
                "doNotRenew": {
                  "type": "boolean"
                },
                "externalPlanCd": {
                  "type": "integer",
                  "nullable": true
                },
                "lastUpdated": {
                  "type": "string"
                },
                "offeredServiceId": {
                  "type": "integer"
                },
                "performancePayPrice": {
                  "type": "number",
                  "nullable": true
                },
                "planEffectiveDate": {
                  "type": "string"
                },
                "planExpirationDate": {
                  "type": "string"
                },
                "planId": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "retailPrice": {
                  "type": "number"
                },
                "revenuePerUnit": {
                  "type": "number"
                },
                "serviceType": {
                  "type": "string"
                },
                "totalDiscountedPrice": {
                  "type": "number"
                },
                "totalRevenue": {
                  "type": "number",
                  "nullable": true
                },
                "totalTrueCost": {
                  "type": "number",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "agreement": {
        "type": "object",
        "properties": {
          "document": {
            "type": "string",
            "format": "binary",
            "description": "Binary-encoded PDF agreement document"
          }
        }
      },
      "contract_service_list": {
        "type": "object",
        "properties": {
          "contract_services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "integer",
                  "example": 5477611
                },
                "offered_service_id": {
                  "type": "integer",
                  "example": 5477232
                },
                "service_description": {
                  "type": "string",
                  "example": "Fecal Test"
                },
                "service_price": {
                  "type": "number",
                  "example": 21.95
                },
                "available_quantity": {
                  "type": "integer",
                  "example": 3
                }
              }
            }
          }
        }
      },
      "offered_service_get_response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5428856
          },
          "offered_service": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 5428799
              },
              "short_description": {
                "type": "string",
                "example": "Wellness Examination",
                "nullable": true
              }
            }
          },
          "plan": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 5428455
              },
              "short_description": {
                "type": "string",
                "example": "Puppy Wellness Plan",
                "nullable": true
              }
            }
          },
          "cost": {
            "type": "number",
            "example": 15.99,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "example": "2019-02-01T16:56:55Z",
            "nullable": true
          },
          "discount_percent": {
            "type": "number",
            "example": 50,
            "nullable": true
          },
          "discounted_price": {
            "type": "number",
            "example": 17.5,
            "nullable": true
          },
          "sort_order": {
            "type": "integer",
            "example": 10,
            "nullable": true
          },
          "code": {
            "type": "number",
            "example": null,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "example": "2019-02-18T18:20:12Z",
            "nullable": true
          },
          "plan_id": {
            "type": "integer",
            "example": 5428455,
            "nullable": true
          },
          "plan_quantity": {
            "type": "integer",
            "example": 3,
            "nullable": true
          },
          "price": {
            "type": "number",
            "example": 35,
            "nullable": true
          },
          "revenue_per_unit": {
            "type": "number",
            "example": 21.1,
            "nullable": true
          },
          "is_optional": {
            "type": "boolean",
            "example": false,
            "nullable": true
          }
        }
      },
      "contract_application_request_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/contract_application_request"
        }
      },
      "contract_application_request": {
        "type": "object",
        "properties": {
          "clinic_location_id": {
            "type": "integer",
            "example": 5426720
          },
          "plan_code": {
            "type": "integer",
            "example": 5428455
          },
          "owner_first_name": {
            "type": "string",
            "example": "Harry"
          },
          "owner_last_name": {
            "type": "string",
            "example": "Potter"
          },
          "address": {
            "type": "string",
            "example": "4 Privet Drive"
          },
          "city": {
            "type": "string",
            "example": "Morino Valley"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "92551"
          },
          "country": {
            "type": "string",
            "example": "US"
          },
          "email": {
            "type": "string",
            "example": "HarryPotter@Hogwarts.edu"
          },
          "owner_id": {
            "type": "string",
            "example": "d525ffb5",
            "nullable": true
          },
          "pet_id": {
            "type": "string",
            "example": "d525ffb5-d6a7-41f9-a317-86a205a9e130",
            "nullable": true
          },
          "pet_name": {
            "type": "string",
            "example": "Hedwig"
          },
          "age": {
            "type": "string",
            "example": "1Y 2M",
            "description": "Also can accept integer year and datetime objects"
          },
          "gender": {
            "type": "string",
            "example": "F",
            "nullable": true
          },
          "payment_method": {
            "type": "string",
            "example": "credit"
          },
          "payment_name": {
            "type": "string",
            "example": "Harry Potter"
          },
          "card_name": {
            "type": "string",
            "example": "Visa"
          },
          "account_number": {
            "type": "integer",
            "example": 1111
          },
          "expiration_month": {
            "type": "integer",
            "example": 1
          },
          "expiration_year": {
            "type": "integer",
            "example": 2099
          },
          "initial_payment_option": {
            "type": "integer",
            "example": 12
          },
          "mobile": {
            "type": "string",
            "example": "9494814601",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "example": "9494814602",
            "nullable": true
          },
          "alternate_phone": {
            "type": "string",
            "example": "9494814603",
            "nullable": true
          },
          "optional_plan_services": {
            "type": "array",
            "example": [

            ]
          }
        }
      },
      "contract_application_response_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/contract_application_response"
        }
      },
      "contract_application_response": {
        "type": "object",
        "properties": {
          "clinic_location_id": {
            "type": "integer",
            "example": 5426720,
            "nullable": true
          },
          "plan_code": {
            "type": "integer",
            "example": 5428455,
            "nullable": true
          },
          "owner_first_name": {
            "type": "string",
            "example": "Harry",
            "nullable": true
          },
          "owner_last_name": {
            "type": "string",
            "example": "Potter",
            "nullable": true
          },
          "address": {
            "type": "string",
            "example": "4 Privet Drive",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Morino Valley",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "CA",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "example": "92551",
            "nullable": true
          },
          "country": {
            "type": "string",
            "example": "US",
            "nullable": true
          },
          "email": {
            "type": "string",
            "example": "HarryPotter@Hogwarts.edu",
            "nullable": true
          },
          "owner_id": {
            "type": "string",
            "example": "d525ffb5",
            "nullable": true
          },
          "pet_id": {
            "type": "string",
            "example": "d525ffb5-d6a7-41f9-a317-86a205a9e130",
            "nullable": true
          },
          "pet_name": {
            "type": "string",
            "example": "Hedwig",
            "nullable": true
          },
          "age": {
            "type": "string",
            "example": "1Y 2M",
            "description": "Also can accept integer year and datetime objects",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "example": "F",
            "nullable": true
          },
          "payment_method": {
            "type": "string",
            "example": "credit",
            "nullable": true
          },
          "payment_name": {
            "type": "string",
            "example": "Harry Potter",
            "nullable": true
          },
          "card_name": {
            "type": "string",
            "example": "Visa",
            "nullable": true
          },
          "account_number": {
            "type": "integer",
            "example": 1111,
            "nullable": true
          },
          "expiration_month": {
            "type": "integer",
            "example": 1,
            "nullable": true
          },
          "expiration_year": {
            "type": "integer",
            "example": 2099,
            "nullable": true
          },
          "initial_payment_option": {
            "type": "integer",
            "example": 12,
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "example": "9494814601",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "example": "9494814602",
            "nullable": true
          },
          "alternate_phone": {
            "type": "string",
            "example": "9494814603",
            "nullable": true
          },
          "optional_plan_services": {
            "type": "array",
            "example": [

            ],
            "nullable": true
          }
        }
      },
      "vip_finalize_application": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/finalize_application"
          },
          {
            "$ref": "#/components/schemas/contract_application_response"
          }
        ]
      },
      "initialize_application_response": {
        "type": "object",
        "properties": {
          "contract_application_id": {
            "type": "integer",
            "example": 1000015424
          },
          "info": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Please download agreement and return via PUT /submit_agreement/:id"
            }
          },
          "agreement_document_base_64": {
            "type": "string",
            "description": "Base-64 encoded agreement document."
          }
        }
      },
      "finalize_application": {
        "type": "object",
        "properties": {
          "initial_payment_option": {
            "type": "integer",
            "enum": [
              1,
              12
            ],
            "example": 12,
            "description": "Payment term (paid in full vs. 12 month term)"
          },
          "payment_token": {
            "type": "string",
            "example": "test_token"
          }
        }
      },
      "contract_get_response_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/contract_get_response"
        }
      },
      "contract_get_response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1000015201,
            "nullable": true
          },
          "address": {
            "type": "string",
            "example": "4 Privet Drive",
            "nullable": true
          },
          "contract_period": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string",
            "example": "2019-12-30T21:23:05Z",
            "nullable": true
          },
          "owner_id": {
            "type": "string",
            "example": "12312351324510",
            "nullable": true
          },
          "clinic_location_id": {
            "type": "string",
            "example": "010265",
            "nullable": true
          },
          "pet_id": {
            "type": "string",
            "example": "112314123412351",
            "nullable": true
          },
          "last_updated": {
            "type": "string",
            "example": "2019-12-30T21:23:05Z",
            "nullable": true
          },
          "age": {
            "type": "string",
            "example": "1Y 2M",
            "nullable": true
          },
          "pet_name": {
            "type": "string",
            "example": "Hedwig",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "example": "9494814601",
            "nullable": true
          },
          "alternate_phone": {
            "type": "string",
            "example": "9494814602",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "example": "92551",
            "nullable": true
          }
        }
      },
      "auth_error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Authentication token is not provided!"
            }
          },
          "auth_status": {
            "type": "string",
            "example": "unauthorized"
          }
        }
      },
      "not_found_error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Not found."
            }
          }
        }
      },
      "malformed_request_error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "object": {
                "type": "string",
                "example": "com.bwse.model.api.ContractApplication"
              },
              "field": {
                "type": "string",
                "example": "email"
              },
              "rejected-value": {
                "type": "string",
                "example": "Harry.Potter@Hogwarts.edu"
              },
              "message": {
                "type": "string",
                "example": "email with value [Harry.Potter@Hogwarts.edu] does not pass custom validation"
              }
            }
          }
        }
      },
      "not_completed_error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Contract application was not completed by provider."
            }
          },
          "response": {
            "type": "object"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/wellness/contract_applications/agreements/{id}": {
      "get": {
        "summary": "Generate a new agreement document to complete contract application. Requires contract application ID.",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generate a new agreement PDF"
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Upload a signed agreement document",
        "tags": [
          "Agreements"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/agreement"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload signed PDF document"
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/initiate_application": {
      "post": {
        "summary": "Initiate a new application and retrieve agreement document",
        "tags": [
          "Contract Application Workflow"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contract_application_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Initiate a new application and retrieve agreement document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/initialize_application_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/malformed_request_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/finalize_application/{id}": {
      "put": {
        "summary": "Finalize a contract application after submitting a signed agreement document",
        "tags": [
          "Contract Application Workflow"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vip_finalize_application"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Finalize a contract application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_application_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/malformed_request_error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_completed_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/contract_applications": {
      "post": {
        "summary": "Create a new contract application",
        "tags": [
          "Contract Applications"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contract_application_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a new contract application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_application_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/malformed_request_error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve a list of existing contract applications",
        "tags": [
          "Contract Applications"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of contract applications",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_application_response_list"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/contract_applications/{id}": {
      "get": {
        "summary": "Show a single contract given an ID",
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a single contract",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_get_response"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing contract application. Used to modify fields and complete the application. Contract applications with a status of 5 are converted to finalized contracts.",
        "tags": [
          "Contract Applications"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contract_application_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update or finalize an existing contract application",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_application_response"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/malformed_request_error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/contract_services": {
      "get": {
        "summary": "List of available contract services.",
        "tags": [
          "Available Contract Services"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "contractId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of contract services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_service_list"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/contract_applications/": {
      "get": {
        "summary": "Retrieve list of contracts",
        "tags": [
          "Contracts"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of contracts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contract_get_response_list"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/plan_services": {
      "get": {
        "summary": "Retrieve a list of available plan services.",
        "tags": [
          "Plan Services"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve list of plan services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/service_list"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/plan_services/{id}": {
      "get": {
        "summary": "Retrieve a single plan service by ID",
        "tags": [
          "Plan Services"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve plan service",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/service"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/plans": {
      "get": {
        "summary": "Retrieve a list of available wellness plans.",
        "tags": [
          "Wellness Plans"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "clinic_location_id",
            "in": "query",
            "required": false,
            "description": "VIP clinic ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_sellable",
            "in": "query",
            "required": false,
            "description": "Plan is active and within date range",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "species",
            "in": "query",
            "required": false,
            "description": "VIP species code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age",
            "in": "query",
            "required": false,
            "description": "Age in years. Accepts integer years, YYMM formatted strings (i.e. \"3Y1M\"), and datetime strings (i.e. \"2016-11-22T21:45:58+00:00\")",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve List of valid plans",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plan_get_response_list"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/wellness/plans/{id}": {
      "get": {
        "summary": "Retrieve a single plan by ID",
        "tags": [
          "Wellness Plans"
        ],
        "security": [
          {
            "bearer_auth": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve plan",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/plan_get_response"
                }
              }
            }
          },
          "404": {
            "description": "Plan not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/not_found_error"
                }
              }
            }
          },
          "403": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth_error"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "localhost:3111/"
        }
      }
    }
  ]
}